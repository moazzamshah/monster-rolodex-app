{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/searchBox/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","handleChange","placeholder","type","onChange","App","props","state","searchField","axios","get","then","data","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAgBeA,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,mBAEN,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCGHC,G,MAVE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCIZO,G,MATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OAChB,uBACEX,UAAU,SACVY,KAAK,SACLD,YAAaA,EACbE,SAAUH,MCiCCI,E,kDAjCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJE,E,qDAOnB,WAAqB,IAAD,OAClBC,IACGC,IADH,8CAEGC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKC,SAAS,CAAEf,SAAUc,S,oBAGlD,WAAU,IAAD,SAC2BE,KAAKP,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZO,EAAmBjB,EAASkB,QAAO,SAAC1B,GAAD,OACvCA,EAAQK,KAAKsB,cAAcC,SAASV,EAAYS,kBAElD,OACE,sBAAK1B,UAAU,MAAf,UACA,mDACE,cAAC,EAAD,CACEU,aAAc,SAACkB,GAAD,OAAO,EAAKN,SAAS,CAAEL,YAAaW,EAAEC,OAAOC,SAC3DnB,YAAY,oBAEd,qBAAKX,UAAU,YAAf,SACE,cAAC,EAAD,CAAUO,SAAUiB,a,GA3BZO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a972d4b.chunk.js","sourcesContent":["import React from 'react';\nimport '../card/card.style.css';\n\nconst Card = ({ monster }) => {\n  return (\n    <div className='card-container'>\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n        alt='random monster'\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card/Card.component';\nimport '../card-list/card-list.styles.css';\n\nconst CardList = ({ monsters }) => {\n  return (\n    <div className='card-list'>\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\nimport './searchbox.styles.css';\n\nconst SearchBox = ({ handleChange, placeholder }) => (\n  <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport CardList from './components/card-list/CardList.component';\nimport './components/card/card.style.css';\nimport SearchBox from './components/searchBox/SearchBox.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/users`)\n      .then(({ data }) => this.setState({ monsters: data }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n      <h1> Monster Rolodex </h1>\n        <SearchBox\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n          placeholder='Search monsters'\n        />\n        <div className='card-list'>\n          <CardList monsters={filteredMonsters} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}